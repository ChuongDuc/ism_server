extend type Mutation {
    createOrder(input: CreateOrderInput!): Order!

    updateOrder(input: UpdateOrderInput!): SuccessResponse!
}

enum StatusOrder {
    creatNew
    priceQuotation
    createExportOrder
    delivery
    successDelivery
    paymentConfirmation
    paid
    done
}

input CreateOrderInput {
    customerId: Int!
    saleUserId: Int!
    VAT: Float
}

input UpdateOrderInput {
    orderId: Int!
    customerId: Int
    saleUserId: Int
    VAT: Float
    status: StatusOrder
    driverUserId: Int
}

type OrderDetail {
    id: Int!
    itemGroup: ItemGroup!
    product: Product!
    quantity: Float!
    priceProduct: Float!
    weightProduct: Float
    totalWeight: Float
    description: String
    createdAt: Date
    updatedAt: Date
}

type ItemGroup {
    id: Int!
    orderDetailList:[OrderDetail!]
    name: String
    description: String
    createdAt: Date
    updatedAt: Date
}

type Order {
    id: Int!
    customer: Customer!
    sale: User!
    invoiceNo: String!
    VAT: Float
    status: StatusOrder
    freightPrice: Float
    deliverAddress: String
    itemGroupList: [ItemGroup]
    paymentList: [PaymentInfo]
    totalMoney: Float
    remainingPaymentMoney: Float
    createdAt: Date
    updatedAt: Date
}